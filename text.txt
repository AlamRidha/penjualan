Ongkir
<!-- Tambahkan di bagian HTML -->
<h2>Data Ongkos Kirim</h2>
<table id="ongkirTable" class="display" style="width:100%">
    <thead>
        <tr>
            <th>No</th>
            <th>Nama Kota</th>
            <th>Tarif</th>
            <th>Aksi</th>
        </tr>
    </thead>
</table>

<!-- Modal Tambah Ongkir -->
<div class="modal fade" id="modalTambahOngkir" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form id="formTambahOngkir">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Tambah Ongkos Kirim</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label>Nama Kota</label>
                        <input type="text" name="nama_kota" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label>Tarif</label>
                        <input type="number" name="tarif" class="form-control" required step="0.01">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Simpan</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Modal Edit Ongkir -->
<div class="modal fade" id="modalEditOngkir" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form id="formEditOngkir">
            <input type="hidden" name="id_ongkir" id="edit_id_ongkir">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Ongkos Kirim</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label>Nama Kota</label>
                        <input type="text" name="nama_kota" id="edit_nama_kota" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label>Tarif</label>
                        <input type="number" name="tarif" id="edit_tarif" class="form-control" required step="0.01">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Update</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
$(document).ready(function() {
    // Inisialisasi DataTable
    let ongkirTable = $('#ongkirTable').DataTable({
        processing: true,
        serverSide: true,
        ajax: 'app/controllers/OngkirController.php?aksi=list',
        columns: [
            { data: 'no' },
            { data: 'nama_kota' },
            { data: 'tarif' },
            { 
                data: 'aksi',
                orderable: false,
                searchable: false 
            }
        ]
    });

    // Handle form tambah ongkir
    $('#formTambahOngkir').submit(function(e) {
        e.preventDefault();
        $.ajax({
            url: 'app/controllers/OngkirController.php?aksi=tambah',
            type: 'POST',
            data: $(this).serialize(),
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    $('#modalTambahOngkir').modal('hide');
                    Swal.fire({
                        icon: 'success',
                        title: 'Sukses!',
                        text: response.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                    ongkirTable.ajax.reload(null, false);
                } else {
                    Swal.fire('Gagal!', response.message, 'error');
                }
            },
            error: function(xhr) {
                Swal.fire('Gagal!', 'Terjadi kesalahan: ' + xhr.statusText, 'error');
            }
        });
    });

    // Handle klik tombol edit
    $('#ongkirTable').on('click', '.btn-edit', function() {
        const id = $(this).data('id');
        $.getJSON('app/controllers/OngkirController.php?aksi=get&id=' + id, function(data) {
            $('#edit_id_ongkir').val(data.id_ongkir);
            $('#edit_nama_kota').val(data.nama_kota);
            $('#edit_tarif').val(data.tarif);
            $('#modalEditOngkir').modal('show');
        });
    });

    // Handle form edit ongkir
    $('#formEditOngkir').submit(function(e) {
        e.preventDefault();
        $.ajax({
            url: 'app/controllers/OngkirController.php?aksi=edit',
            type: 'POST',
            data: $(this).serialize(),
            dataType: 'json',
            success: function(response) {
                if (response.success) {
                    $('#modalEditOngkir').modal('hide');
                    Swal.fire({
                        icon: 'success',
                        title: 'Berhasil!',
                        text: response.message,
                        timer: 1500,
                        showConfirmButton: false
                    });
                    ongkirTable.ajax.reload(null, false);
                } else {
                    Swal.fire('Gagal!', response.message, 'error');
                }
            },
            error: function(xhr) {
                Swal.fire('Gagal!', 'Terjadi kesalahan: ' + xhr.statusText, 'error');
            }
        });
    });

    // Handle klik tombol hapus
    $('#ongkirTable').on('click', '.btn-hapus', function() {
        const id = $(this).data('id');
        Swal.fire({
            title: 'Yakin ingin menghapus?',
            text: 'Data ongkos kirim akan dihapus permanen.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Ya, hapus!',
            cancelButtonText: 'Batal'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: 'app/controllers/OngkirController.php?aksi=hapus',
                    type: 'POST',
                    data: { id: id },
                    dataType: 'json',
                    success: function(response) {
                        if (response.success) {
                            Swal.fire('Terhapus!', response.message, 'success');
                            ongkirTable.ajax.reload(null, false);
                        } else {
                            Swal.fire('Gagal!', response.message, 'error');
                        }
                    },
                    error: function(xhr) {
                        Swal.fire('Gagal!', 'Terjadi kesalahan: ' + xhr.statusText, 'error');
                    }
                });
            }
        });
    });
});
</script>


















<style>
    .card img {
        width: 100%;
        height: 160px;
        object-fit: cover;
    }
</style>


<div class="container mt-4">
    <h3 class="mb-4">Daftar Produk</h3>
    <div class="row" id="produk-grid">
        <!-- Data produk akan dimuat di sini lewat AJAX -->
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        fetch('app/controllers/ProdukController.php?aksi=list&mode=raw')
            .then(res => res.json())
            .then(data => {
                const container = document.getElementById("produk-grid");
                container.innerHTML = '';

                data.data.forEach(item => {
                    const produkCard = `
                    <div class="col-md-3 mb-4">
                        <div class="card h-100">
                            ${item.foto_produk ? `<img src="${item.foto_produk}" class="card-img-top" alt="${item.nama_produk}">` : ''}
                            <div class="card-body">
                                <h5 class="card-title">${item.nama_produk}</h5>
                                <p class="card-text">${item.deskripsi_produk.substring(0, 60)}...</p>
                                <p class="card-text text-success fw-bold">${item.harga_produk}</p>
                                <p class="card-text">Stok: ${item.stok_produk}</p>
                                <button class="btn btn-sm btn-primary btn-detail" data-id="${item.id_produk}">Lihat Detail</button>
                                <button class="btn btn-sm btn-success btn-cart" data-id="${item.id_produk}">+ Keranjang</button>
                            </div>
                        </div>
                    </div>
                `;
                    container.innerHTML += produkCard;
                });
            });
    });

    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('btn-detail')) {
            const id = e.target.getAttribute('data-id');
            // Panggil modal atau halaman detail
            alert('Lihat detail untuk produk ID: ' + id);
        }

        if (e.target.classList.contains('btn-cart')) {
            const id = e.target.getAttribute('data-id');
            // Kirim ke keranjang (panggil AJAX simpan session cart)
            alert('Tambah ke keranjang ID: ' + id);
        }
    });
</script>





    <div class="container">
        <h2 class="my-4">Keranjang Belanja</h2>

        <?php if (empty($cart['items'])): ?>
            <div class="alert alert-info">
                Keranjang belanja Anda kosong. <a href="index.php?page=pelanggan/data_product">Mulai belanja</a>
            </div>
        <?php else: ?>
            <div class="row">
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Produk</th>
                                            <th>Harga</th>
                                            <th>Jumlah</th>
                                            <th>Subtotal</th>
                                            <th>Aksi</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <?php foreach ($cart['items'] as $item): ?>
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <?php if ($item['foto']): ?>
                                                            <img src="<?= $item['foto'] ?>" alt="<?= $item['nama'] ?>" class="img-thumbnail me-3" width="60">
                                                        <?php endif; ?>
                                                        <div>
                                                            <h6 class="mb-0"><?= $item['nama'] ?></h6>
                                                            <small class="text-muted">Stok: <?= $item['stok'] ?></small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>Rp<?= number_format($item['harga'], 0, ',', '.') ?></td>
                                                <td>
                                                    <input type="number"
                                                        class="form-control quantity-input"
                                                        value="<?= $item['quantity'] ?>"
                                                        min="1"
                                                        max="<?= $item['stok'] ?>"
                                                        data-id="<?= $item['id'] ?>"
                                                        style="width: 80px;">
                                                </td>
                                                <td>Rp<?= number_format($item['subtotal'], 0, ',', '.') ?></td>
                                                <!-- Di dalam tabel keranjang, perbaiki bagian input quantity -->
                                                <td>
                                                    <div class="input-group" style="width: 120px;">
                                                        <button class="btn btn-outline-secondary btn-minus" data-id="<?= $item['id'] ?>">-</button>
                                                        <input type="number" class="form-control text-center quantity-input"
                                                            value="<?= $item['quantity'] ?>" min="1" max="<?= $item['stok'] ?>"
                                                            data-id="<?= $item['id'] ?>">
                                                        <button class="btn btn-outline-secondary btn-plus" data-id="<?= $item['id'] ?>">+</button>
                                                    </div>
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-danger remove-item" data-id="<?= $item['id'] ?>">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </td>

                                            </tr>
                                        <?php endforeach; ?>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Ringkasan Belanja</h5>
                            <hr>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Total Harga:</span>
                                <strong>Rp<?= number_format($cart['total'], 0, ',', '.') ?></strong>
                            </div>
                            <button class="btn btn-primary w-100 mt-3" id="checkout-btn" data-bs-toggle="modal" data-bs-target="#checkoutModal">
                                Lanjut ke Pembayaran
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        <?php endif; ?>
    </div>














    <div class="modal fade" id="checkoutModal" tabindex="-1" aria-labelledby="checkoutModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="checkoutModalLabel">Informasi Pengiriman</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="checkoutForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="nama" class="form-label">Nama Lengkap</label>
                        <input type="text" class="form-control" id="nama" name="nama" required>
                    </div>
                    <div class="mb-3">
                        <label for="id_ongkir" class="form-label">Kota</label>
                        <select class="form-select" id="id_ongkir" name="id_ongkir" required>
                            <option value="">-- Pilih Kota --</option>
                            <?php
                            $ongkirQuery = $koneksi->query("SELECT * FROM ongkir");
                            while ($ongkir = $ongkirQuery->fetch_assoc()):
                            ?>
                                <option value="<?= $ongkir['id_ongkir'] ?>" data-tarif="<?= $ongkir['tarif'] ?>">
                                    <?= $ongkir['nama_kota'] ?> - Rp<?= number_format($ongkir['tarif'], 0, ',', '.') ?>
                                </option>
                            <?php endwhile; ?>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="alamat" class="form-label">Alamat Lengkap</label>
                        <textarea class="form-control" id="alamat" name="alamat" rows="3" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="bukti" class="form-label">Upload Bukti Pembayaran</label>
                        <input type="file" class="form-control" id="bukti" name="bukti" accept="image/*" required>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="submit" class="btn btn-primary">Proses Pesanan</button>
                </div>
            </form>
        </div>
    </div>
</div>








function checkout($conn)
{
    // Validasi data
    $required = ['nama', 'telepon', 'alamat', 'id_ongkir', 'bank'];
    foreach ($required as $field) {
        if (empty($_POST[$field])) {
            echo json_encode(['success' => false, 'message' => 'Semua field harus diisi']);
            return;
        }
    }

    // Validasi file upload
    if (!isset($_FILES['bukti']) || $_FILES['bukti']['error'] != UPLOAD_ERR_OK) {
        echo json_encode(['success' => false, 'message' => 'Bukti pembayaran harus diupload']);
        return;
    }

    // Mulai transaksi
    $conn->begin_transaction();

    try {
        // 1. Simpan data pembelian
        $stmt = $conn->prepare("INSERT INTO pembelian (
            id_pelanggan, id_ongkir, total_pembelian, alamat_pengiriman, nama_kota, tarif
        ) VALUES (?, ?, ?, ?, ?, ?)");

        // Dapatkan data ongkir
        $ongkir = $conn->query("SELECT nama_kota, tarif FROM ongkir WHERE id_ongkir = " . $_POST['id_ongkir'])->fetch_assoc();

        $pelangganId = $_SESSION['user']['id'] ?? 0;
        $stmt->bind_param(
            "iidssd",
            $pelangganId,
            $_POST['id_ongkir'],
            $_POST['total_pembelian'],
            $_POST['alamat'],
            $ongkir['nama_kota'],
            $ongkir['tarif']
        );
        $stmt->execute();
        $pembelianId = $conn->insert_id;
        $stmt->close();

        // 2. Simpan item pembelian
        $stmt = $conn->prepare("INSERT INTO pembelian_produk (
            id_pembelian, id_produk, jumlah, nama_produk, harga, sub_harga
        ) VALUES (?, ?, ?, ?, ?, ?)");

        foreach ($_SESSION['cart'] as $productId => $quantity) {
            $product = getProduct($conn, $productId);
            $subtotal = $product['harga_produk'] * $quantity;

            $stmt->bind_param(
                "iiisdd",
                $pembelianId,
                $productId,
                $quantity,
                $product['nama_produk'],
                $product['harga_produk'],
                $subtotal
            );
            $stmt->execute();

            // Update stok produk
            $conn->query("UPDATE produk SET stok_produk = stok_produk - $quantity WHERE id_produk = $productId");
        }
        $stmt->close();

        // 3. Simpan bukti pembayaran
        $uploadDir = 'uploads/bukti/';
        if (!file_exists($uploadDir)) {
            mkdir($uploadDir, 0777, true);
        }

        $ext = pathinfo($_FILES['bukti']['name'], PATHINFO_EXTENSION);
        $filename = 'pembayaran_' . $pembelianId . '_' . time() . '.' . $ext;
        $targetFile = $uploadDir . $filename;

        if (!move_uploaded_file($_FILES['bukti']['tmp_name'], $targetFile)) {
            throw new Exception('Gagal mengupload bukti pembayaran');
        }

        // 4. Simpan data pembayaran
        $stmt = $conn->prepare("INSERT INTO pembayaran (
            id_pembelian, nama, bank, jumlah, bukti_pembayaran
        ) VALUES (?, ?, ?, ?, ?)");

        $stmt->bind_param(
            "issds",
            $pembelianId,
            $_POST['nama'],
            $_POST['bank'],
            $_POST['total_pembelian'],
            $filename
        );
        $stmt->execute();
        $stmt->close();

        // 5. Kosongkan keranjang
        $_SESSION['cart'] = [];

        // Commit transaksi
        $conn->commit();

        echo json_encode([
            'success' => true,
            'message' => 'Pesanan berhasil dibuat',
            'id_pembelian' => $pembelianId
        ]);
    } catch (Exception $e) {
        $conn->rollback();
        echo json_encode([
            'success' => false,
            'message' => 'Gagal memproses pesanan: ' . $e->getMessage()
        ]);
    }
}




 document.getElementById("checkoutForm").addEventListener('submit', function(e) {
            e.preventDefault();

            // Tampilkan loading
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Memproses...';

            const formData = new FormData(this);
            // Ambil nilai total pembayaran tanpa simbol dan pemisah ribuan
            const totalPembayaran = document.getElementById('summary-total').textContent.replace('Rp', '').replace(/\./g, '');
            formData.append('total_pembelian', totalPembayaran);

            fetch('index.php?page=cart_action&aksi=checkout', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    // Check if the response is JSON
                    const contentType = response.headers.get('content-type');
                    if (contentType && contentType.includes('application/json')) {
                        return response.json().then(data => {
                            if (!response.ok) {
                                throw new Error(data.message || 'Terjadi kesalahan pada server');
                            }
                            return data;
                        });
                    } else {
                        // If not JSON, get the text and show detailed error
                        return response.text().then(text => {
                            console.error("Server returned non-JSON response:", text);
                            // Display the actual server response in the alert for debugging
                            Swal.fire({
                                title: 'Debug: Server Response',
                                html: `<p>Content-Type: ${contentType || 'none'}</p>
                                  <p>Response status: ${response.status}</p>
                                  <div style="max-height: 300px; overflow-y: auto; text-align: left; background: #f5f5f5; padding: 10px; margin-top: 10px;">
                                    <pre>${text.replace(/</g, '&lt;').replace(/>/g, '&gt;')}</pre>
                                  </div>`,
                                width: 800,
                                confirmButtonText: 'OK'
                            });
                            throw new Error('Server mengembalikan respons yang tidak valid');
                        });
                    }
                })
                .then(data => {
                    if (data.success) {
                        window.location.href = 'index.php?page=riwayat&id=' + data.id_pembelian;
                    } else {
                        Swal.fire('Error', data.message || 'Gagal memproses pesanan', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Terjadi kesalahan saat memproses pesanan: ' + error.message, 'error');
                })
                .finally(() => {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Proses Pesanan';
                });
        });




//palign lama
// Proses checkout
// function checkout($conn)
// {
//     // Validasi data
//     $required = ['nama', 'telepon', 'alamat', 'id_ongkir', 'bank'];
//     foreach ($required as $field) {
//         if (empty($_POST[$field])) {
//             echo json_encode(['success' => false, 'message' => 'Semua field harus diisi']);
//             return;
//         }
//     }

//     // Validasi file upload
//     if (!isset($_FILES['bukti']) || $_FILES['bukti']['error'] != UPLOAD_ERR_OK) {
//         echo json_encode(['success' => false, 'message' => 'Bukti pembayaran harus diupload']);
//         return;
//     }

//     // Mulai transaksi
//     $conn->begin_transaction();

//     try {
//         // 1. Simpan data pembelian
//         $stmt = $conn->prepare("INSERT INTO pembelian (
//             id_pelanggan, id_ongkir, total_pembelian, alamat_pengiriman, nama_kota, tarif
//         ) VALUES (?, ?, ?, ?, ?, ?)");

//         // Dapatkan data ongkir
//         $ongkir = $conn->query("SELECT nama_kota, tarif FROM ongkir WHERE id_ongkir = " . $_POST['id_ongkir'])->fetch_assoc();

//         $pelangganId = $_SESSION['pelanggan']['id'] ?? 0;
//         $stmt->bind_param(
//             "iidssd",
//             $pelangganId,
//             $_POST['id_ongkir'],
//             $_POST['total_pembelian'],
//             $_POST['alamat'],
//             $ongkir['nama_kota'],
//             $ongkir['tarif']
//         );
//         $stmt->execute();
//         $pembelianId = $conn->insert_id;
//         $stmt->close();

//         // 2. Simpan item pembelian
//         $stmt = $conn->prepare("INSERT INTO pembelian_produk (
//             id_pembelian, id_produk, jumlah, nama_produk, harga, sub_harga
//         ) VALUES (?, ?, ?, ?, ?, ?)");

//         foreach ($_SESSION['cart'] as $productId => $quantity) {
//             $product = getProduct($conn, $productId);
//             $subtotal = $product['harga_produk'] * $quantity;

//             $stmt->bind_param(
//                 "iiisdd",
//                 $pembelianId,
//                 $productId,
//                 $quantity,
//                 $product['nama_produk'],
//                 $product['harga_produk'],
//                 $subtotal
//             );
//             $stmt->execute();

//             // Update stok produk
//             $conn->query("UPDATE produk SET stok_produk = stok_produk - $quantity WHERE id_produk = $productId");
//         }
//         $stmt->close();

//         // 3. Simpan bukti pembayaran
//         $uploadDir = '../../uploads/bukti/';
//         if (!file_exists($uploadDir)) {
//             mkdir($uploadDir, 0777, true);
//         }

//         // Validasi ekstensi file
//         $allowedExtensions = ['jpg', 'jpeg', 'png', 'pdf'];
//         $fileExtension = strtolower(pathinfo($_FILES['bukti']['name'], PATHINFO_EXTENSION));

//         if (!in_array($fileExtension, $allowedExtensions)) {
//             echo json_encode([
//                 'success' => false,
//                 'message' => 'Format file tidak didukung. Gunakan JPG, PNG, atau PDF'
//             ]);
//             return;
//         }

//         $filename = 'bukti_' . time() . '_' . bin2hex(random_bytes(4)) . '.' . $fileExtension;
//         $targetPath = $uploadDir . $filename;

//         if (!move_uploaded_file($_FILES['bukti']['tmp_name'], $targetPath)) {
//             echo json_encode([
//                 'success' => false,
//                 'message' => 'Gagal menyimpan bukti pembayaran'
//             ]);
//             return;
//         }

//         // 4. Simpan data pembayaran
//         $stmt = $conn->prepare("INSERT INTO pembayaran (
//             id_pembelian, nama, bank, jumlah, bukti_pembayaran
//         ) VALUES (?, ?, ?, ?, ?)");

//         $stmt->bind_param(
//             "issds",
//             $pembelianId,
//             $_POST['nama'],
//             $_POST['bank'],
//             $_POST['total_pembelian'],
//             $filename
//         );
//         $stmt->execute();
//         $stmt->close();

//         // 5. Kosongkan keranjang
//         $_SESSION['cart'] = [];

//         // Commit transaksi
//         $conn->commit();

//         echo json_encode([
//             'success' => true,
//             'message' => 'Pesanan berhasil dibuat',
//             'id_pembelian' => $pembelianId
//         ]);
//     } catch (Exception $e) {
//         // Hapus file jika gagal
//         if (file_exists($targetPath)) {
//             unlink($targetPath);
//         }

//         $conn->rollback();

//         echo json_encode([
//             'success' => false,
//             'message' => 'Gagal memproses pesanan: ' . $e->getMessage()
//         ]);
//     }
// }



//Script lama:
<!-- <script>
    document.addEventListener("DOMContentLoaded", function() {

        // Hitung ongkir saat kota berubah
        document.getElementById('kota').addEventListener('change', function() {
            const tarif = this.options[this.selectedIndex].dataset.tarif || 0;
            const totalProduk = <?= $cart['total'] ?>;
            const totalPembayaran = totalProduk + parseFloat(tarif);

            document.getElementById('summary-shipping').textContent = 'Rp' + parseFloat(tarif).toLocaleString('id-ID');
            document.getElementById('summary-total').textContent = 'Rp' + totalPembayaran.toLocaleString('id-ID');
        });

        // Proses checkout
        document.getElementById("checkoutForm").addEventListener('submit', function(e) {
            e.preventDefault();

            // Tampilkan loading
            const submitBtn = this.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Memproses...';

            const formData = new FormData(this);
            formData.append('total_pembelian', document.getElementById('summary-total').textContent.replace('Rp', '').replace(/\./g, ''));

            fetch('index.php?page=cart_action&aksi=checkout', {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(text => {
                            throw new Error(text || 'Network response was not ok');
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        window.location.href = 'index.php?page=riwayat&id=' + data.id_pembelian;
                    } else {
                        Swal.fire('Error', data.message || 'Gagal memproses pesanan', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Terjadi kesalahan saat memproses pesanan: ' + error.message, 'error');
                })
                .finally(() => {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = 'Proses Pesanan';
                });
        });
    });

    // Update quantity
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('change', function() {
            const productId = this.dataset.id;
            const quantity = this.value;

            fetch('index.php?page=cart_action&aksi=update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `id_produk=${productId}&qty=${quantity}`
                })
                .then(res => res.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                });
        });
    });

    document.querySelectorAll('.btn-plus').forEach(btn => {
        btn.addEventListener('click', function() {
            const productId = this.dataset.id;
            const quantityDisplay = this.parentElement.querySelector('.quantity-display');
            const currentQty = parseInt(quantityDisplay.textContent);
            const maxStock = parseInt(this.closest('tr').querySelector('.text-muted').textContent.replace('Stok: ', ''));

            if (currentQty < maxStock) {
                updateCartItem(productId, currentQty + 1);
            }
        });
    });

    // Tombol minus
    document.querySelectorAll('.btn-minus').forEach(btn => {
        btn.addEventListener('click', function() {
            const productId = this.dataset.id;
            const quantityDisplay = this.parentElement.querySelector('.quantity-display');
            const currentQty = parseInt(quantityDisplay.textContent);

            if (currentQty > 1) {
                updateCartItem(productId, currentQty - 1);
            }
        });
    });

    // Hapus item
    document.querySelectorAll('.remove-item').forEach(btn => {
        btn.addEventListener('click', function() {
            Swal.fire({
                title: 'Hapus Produk?',
                text: "Apakah Anda yakin ingin menghapus produk ini dari keranjang?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Ya, hapus',
                cancelButtonText: 'Batal'
            }).then((result) => {
                if (result.isConfirmed) {
                    const productId = btn.dataset.id;
                    fetch(`index.php?page=cart_action&aksi=hapus&id=${productId}`)
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    title: 'Berhasil!',
                                    text: 'Produk telah dihapus dari keranjang.',
                                    icon: 'success',
                                    timer: 1500,
                                    showConfirmButton: false
                                }).then(() => location.reload());
                            } else {
                                Swal.fire('Error', data.message, 'error');
                            }
                        });
                }
            });

        });
    });

    // Fungsi update item
    function updateCartItem(productId, quantity) {
        fetch('index.php?page=cart_action&aksi=update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: `id_produk=${productId}&qty=${quantity}`
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    Swal.fire('Error', data.message, 'error');
                }
            });
    }

    // Checkout form
    document.getElementById("checkoutForm").addEventListener('submit', function(e) {
        e.preventDefault();

        const formData = new FormData(this);

        fetch('index.php?page=cart_action&aksi=checkout', {
                method: 'POST',
                body: formData
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    // Redirect ke halaman konfirmasi
                    window.location.href = `index.php?page=order_confirmation&id=${data.transaksi_id}`;
                } else {
                    alert(data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Terjadi kesalahan saat memproses pesanan');
            });
    });
</script> -->